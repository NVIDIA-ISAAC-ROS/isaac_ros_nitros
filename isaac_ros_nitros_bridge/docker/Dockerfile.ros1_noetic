# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

FROM nvcr.io/nvidia/cuda:11.4.0-devel-ubuntu20.04

# disable terminal interaction for apt
ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL=/bin/bash
SHELL ["/bin/bash", "-c"]

# Ensure we have universe
RUN apt-get update \
        && apt-get install -y software-properties-common \
        && add-apt-repository universe

# Fundamentals
RUN apt-get update && apt-get install -y \
        apt-transport-https \
        bash-completion \
        build-essential \
        ca-certificates \
        clang-format \
        cmake \
        curl \
        git \
        git-lfs \
        gnupg2 \
        iputils-ping \
        locales \
        lsb-release \
        rsync \
        software-properties-common \
        wget \
        vim \
        unzip \
        mlocate \
        sudo \
        udev \
	libgoogle-glog-dev \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean

# Add Isaac apt repository
RUN wget -qO - https://isaac.download.nvidia.com/isaac-ros/repos.key | apt-key add -
RUN echo 'deb https://isaac.download.nvidia.com/isaac-ros/ubuntu/main focal main' | tee -a /etc/apt/sources.list

# Set Python3 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# Python basics
RUN apt-get update && apt-get install -y \
        python3-pip \
        python3-pybind11 \
        python3-pytest-cov \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean

# Python3 (PIP)
RUN python3 -m pip install -U \
        argcomplete \
        autopep8 \
        flake8==4.0.1 \
        flake8-blind-except \
        flake8-builtins \
        flake8-class-newline \
        flake8-comprehensions \
        flake8-deprecated \
        flake8-docstrings \
        flake8-import-order \
        flake8-quotes \
        onnx \
        pytest-repeat \
        pytest-rerunfailures \
        pytest \
        pydocstyle \
        scikit-learn

# Upgrade cmake to 3.22.1 to match Ubuntu 22.04
# Key rotation 2024-01-10
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
    && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null \
    && apt-get update \
    && apt-get remove -y cmake && apt-get purge -y cmake && apt-get remove -y cmake-data && apt-get purge -y cmake-data \
    && apt-get install -y cmake=3.22.1-0kitware1ubuntu20.04.1 cmake-data=3.22.1-0kitware1ubuntu20.04.1 \
    && cmake --version \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean

# Add ROS 2 apt repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2-testing/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# ROS fundamentals
RUN --mount=type=cache,target=/var/cache/apt \
apt-get update && apt-get install -y \
        devscripts \
        dh-make \
        fakeroot \
        libxtensor-dev \
        python3-bloom \
        python3-colcon-common-extensions \
        python3-pip \
        python3-pybind11 \
        python3-pytest-cov \
        python3-rosdep \
        python3-rosinstall-generator \
        python3-vcstool \
        python3-wstool \
        quilt

# Install ROS 2 Humble
RUN apt-get update && apt-get install -y ros-humble-ros-base \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install ROS Noetic due to CMake update
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' \
    && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - \
    && apt-get update && apt-get install -y ros-noetic-ros-base

# Install VPI packages
RUN --mount=type=cache,target=/var/cache/apt \
    apt-key adv --fetch-key https://repo.download.nvidia.com/jetson/jetson-ota-public.asc ; \
    add-apt-repository "deb http://repo.download.nvidia.com/jetson/x86_64/$(lsb_release -cs) r36.4 main" ; \
    apt-get update ; \
    apt-get install libnvvpi3 vpi3-dev

# Setup non-root admin user
ARG USERNAME=admin
ARG USER_UID=1001
ARG USER_GID=1001

# Create the 'admin' user if not already exists
RUN if [ ! $(getent passwd ${USERNAME}) ]; then \
        groupadd --gid ${USER_GID} ${USERNAME} ; \
        useradd --no-log-init --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} ; \
    fi

# Update 'admin' user
RUN echo ${USERNAME} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} \
    && chmod 0440 /etc/sudoers.d/${USERNAME} \
    && adduser ${USERNAME} video && adduser ${USERNAME} plugdev && adduser ${USERNAME} sudo

ENV USERNAME=${USERNAME}
ENV USER_GID=${USER_GID}
ENV USER_UID=${USER_UID}

RUN mkdir /workspaces
COPY ros1_ws /workspaces/

# Copy scripts
RUN mkdir -p /usr/local/bin/scripts
COPY ros1_ws/isaac_ros_1-dev/src/isaac_ros_nitros/isaac_ros_nitros_bridge/scripts/*entrypoint.sh /usr/local/bin/scripts/
RUN  chmod +x /usr/local/bin/scripts/*entrypoint.sh

# Copy middleware profiles
RUN mkdir -p /usr/local/share/middleware_profiles
COPY ros1_ws/isaac_ros-dev/src/isaac_ros_common/docker/middleware_profiles/*profile.xml /usr/local/share/middleware_profiles/

# Build ROS 1 workspaces
WORKDIR /workspaces/isaac_ros_1-dev/
RUN mv src/isaac_ros_nitros/isaac_ros_nitros_bridge src/ && rm -rf src/isaac_ros_nitros
# Remove the COLCON_IGNORE file first to build the ROS 1 bridge
RUN /bin/bash -c "rm src/isaac_ros_nitros_bridge/ros1/COLCON_IGNORE && \
    source /opt/ros/noetic/setup.bash && catkin_make_isolated --install --ignore-pkg isaac_ros_nitros_bridge_ros2"

# Build ROS 2 workspaces
WORKDIR /workspaces/isaac_ros-dev/
RUN /bin/bash -c "source /opt/ros/humble/setup.bash && colcon build --symlink-install --packages-up-to \
    isaac_ros_nitros_bridge_interfaces \
    isaac_ros_apriltag_interfaces \
    isaac_ros_bi3d_interfaces \
    isaac_ros_nova_interfaces \
    isaac_ros_pointcloud_interfaces \
    isaac_ros_tensor_list_interfaces"

# Build ROS 1 bridge
RUN /bin/bash -c \
    "source ../isaac_ros_1-dev/install_isolated/setup.bash && source /opt/ros/humble/setup.bash && \
    colcon build --symlink-install --packages-select ros1_bridge --cmake-force-configure"

USER ${USERNAME}
WORKDIR /workspaces/isaac_ros_1-dev/
ENTRYPOINT ["/usr/local/bin/scripts/nitros-bridge-entrypoint.sh"]
CMD ["nitros_bridge_convert_forward.yaml", "nitros_bridge_convert_forward.launch"]
